{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["'use strict';\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('#datetime-picker');\nconst button = document.querySelector('button');\nbutton.disabled = true;\n\n// const startBtn = document.querySelector('[data-start]');\n// const daysTimer = document.querySelector('[data-days]');\n// const hoursTimer = document.querySelector('[data-hours]');\n// const minutesTimer = document.querySelector('[data-minutes]');\n// const secondsTimer = document.querySelector('[data-seconds]');\n\n// оголоси поза межами методу let змінну userSelectedDate\nlet userSelectedDate = '';\n\n//об'єкт параметрів бібліотеки flatpickr\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  //onClose() викликається щоразу під час закриття елемента інтерфейсу flatpickr.\n  onClose(selectedDates) {\n    // перевірка дати на майбутність\n    if (selectedDates[0] < new Date()) {\n      // button.disabled = true;\n      // window.alert('Please choose a date in the future');\n\n      // iziToast.show({\n      //   message: 'Please choose a date in the future',\n      //   messageColor: '#FAFAFB',\n      //   messageSize: '16px',\n      //   messageLineHeight: '1.5',\n      //   backgroundColor: '#EF4040',\n      //   position: 'topRight',\n      //   closeOnEscape: true,\n      //   close: true,\n      // });\n\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n        closeOnEscape: true,\n        timeout: 5000,\n      });\n    } else {\n      button.disabled = false;\n      userSelectedDate = selectedDates[0];\n    }\n  },\n};\n\n//initial flatpickr\n//створюємо екземпляр бібліотеки\nconst datePicker = flatpickr(input, options);\n\n//додаємо слухач на input\ninput.addEventListener('focus', () => {\n  datePicker.config.defaultDate = new Date();\n});\n\n// Start the countdown\nbutton.addEventListener('click', () => {\n  const currentTime = new Date().getTime();\n  const selectedTime = userSelectedDate.getTime();\n  const countdownInterval = selectedTime - currentTime;\n  // convertMs(countdownInterval).addLeadingZero();\n  const time = convertMs(countdownInterval);\n\n  const formattedTime = {\n    days: addLeadingZero(time.days),\n    hours: addLeadingZero(time.hours),\n    minutes: addLeadingZero(time.minutes),\n    seconds: addLeadingZero(time.seconds),\n  };\n\n  console.log(formattedTime); // { days: '00', hours: '00', minutes: '00', seconds: '02' }\n  // Очищення поля вводу\n  input.value = '';\n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\n// iziToast.show({\n//   message: 'Please choose a date in the future',\n//   messageColor: '#FAFAFB',\n//   messageSize: '16px',\n//   messageLineHeight: '1.5',\n//   backgroundColor: '#EF4040',\n//   position: 'topRight',\n//   closeOnEscape: true,\n//   close: true,\n// });\n"],"names":["input","button","userSelectedDate","options","selectedDates","iziToast","datePicker","flatpickr","currentTime","countdownInterval","time","convertMs","formattedTime","addLeadingZero","ms","days","hours","minutes","seconds","value"],"mappings":"2GAMA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,SAAW,GASlB,IAAIC,EAAmB,GAGvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CAEjBA,EAAc,GAAK,IAAI,KAezBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,WACV,cAAe,GACf,QAAS,GACjB,CAAO,GAEDJ,EAAO,SAAW,GAClBC,EAAmBE,EAAc,GAEpC,CACH,EAIME,EAAaC,EAAUP,EAAOG,CAAO,EAG3CH,EAAM,iBAAiB,QAAS,IAAM,CACpCM,EAAW,OAAO,YAAc,IAAI,IACtC,CAAC,EAGDL,EAAO,iBAAiB,QAAS,IAAM,CACrC,MAAMO,EAAc,IAAI,KAAM,EAAC,QAAO,EAEhCC,EADeP,EAAiB,UACGM,EAEnCE,EAAOC,EAAUF,CAAiB,EAElCG,EAAgB,CACpB,KAAMC,EAAeH,EAAK,IAAI,EAC9B,MAAOG,EAAeH,EAAK,KAAK,EAChC,QAASG,EAAeH,EAAK,OAAO,EACpC,QAASG,EAAeH,EAAK,OAAO,CACxC,EAEE,QAAQ,IAAIE,CAAa,EAEzBZ,EAAM,MAAQ,EAChB,CAAC,EAED,SAASW,EAAUG,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIP,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC,EAE/B,SAASE,EAAeM,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}